<script runat="server">
  Platform.Load("core","1.1.5");
  HTTPHeader.SetValue("Access-Control-Allow-Headers", "*");
  HTTPHeader.SetValue("Access-Control-Allow-Origin", "*");
  try {
    var Count = GUID();
    // Get request headers for referal validation
    var requestHost = Platform.Request.GetRequestHeader('Host');
    var referer = Platform.Request.GetRequestHeader('Referer');
    var userAgent = Platform.Request.GetRequestHeader('User-Agent');
    // Get form values
    var firstName = Platform.Request.GetFormField('FirstName');
    var lastName = Platform.Request.GetFormField('LastName');
    var email = Platform.Request.GetFormField('Email');
    var phone = Platform.Request.GetFormField('Phone');
    var city = Platform.Request.GetFormField('City');
    var state = Platform.Request.GetFormField('State');
    var region = Platform.Request.GetFormField('Region');
    var hoCont = Platform.Request.GetFormField('Homeowner_Contractor');
    var help = Platform.Request.GetFormField('Help');
    var bestFit = Platform.Request.GetFormField('BestFit');
    var company = Platform.Request.GetFormField('Company');
    var wklyCartVol = Platform.Request.GetFormField('weekly_cartridge_volume'); 
    var mthlyCaseVol = Platform.Request.GetFormField('monthly_case_volume');
    var brandType = Platform.Request.GetFormField('BrandType');
    var projectType = Platform.Request.GetFormField('ProjectType');
    var productGroup = Platform.Request.GetFormField('ProductGroup');
    var typeOfProject = Platform.Request.GetFormField('TypeOfProject');
    var annualHomeCount = Platform.Request.GetFormField('AnnualHomeCount');
    var comments = Platform.Request.GetFormField('Comments');
    var optIn = Platform.Request.GetFormField('optIn');
    
    var subKey = Platform.Function.Lookup('Contact_Salesforce','Id','Email',email);

    if(!subKey) {
      var subKey = Platform.Function.Lookup('Lead_Salesforce','Id','Email',email);
    }
    
    if (subKey) {
     var salesforceId = subKey;
    } else {
     var subKey = email;
    };
    
   if (hoCont === "Contactor_Pro"){
     var hoCont = "Contractor / Pro"
    } else if (hoCont === "Dealter_Retailer") {
     var hoCont = "Dealer / Retailer"
    };
    
    if(brandType){
     var brandType = brandType.replace(/,/g, ";");
    };
    
    if(projectType){
     var projectType = projectType.replace(/,/g, ";");
    };
    
      
    // Email Validation
    var authEndpoint = Platform.Function.Lookup('keys','authEndpoint','Service','SFMC');
    var clientId = Platform.Function.Lookup('keys','client_id','Service','SFMC');
    var clientSecret = Platform.Function.Lookup('keys','client_secret','Service','SFMC');
    var payload = {
      client_id: clientId,
      client_secret: clientSecret,
      grant_type: "client_credentials"
    };
    var url = authEndpoint + '/v2/token'
    var contentType = 'application/json'
    var accessTokenRequest = HTTP.Post(url, contentType, Stringify(payload));
    if (accessTokenRequest.StatusCode == 200) {
      var tokenResponse = Platform.Function.ParseJSON(accessTokenRequest.Response[0]);
      var mcAccessToken = tokenResponse.access_token
      var rest_instance_url = tokenResponse.rest_instance_url
      };
    if (mcAccessToken != null && email != null) {
      var headerNames = ["Authorization"];
      var headerValues = ["Bearer " + mcAccessToken];
      var jsonBody = {
        "email": email,
        "validators": [
          "SyntaxValidator",
          "MXValidator",
          "ListDetectiveValidator"
        ]}
      var requestUrl = rest_instance_url + "/address/v1/validateEmail";
      var validateEmail = HTTP.Post(requestUrl, contentType, Stringify(jsonBody), headerNames, headerValues);
      var aRes = Platform.Function.ParseJSON(validateEmail.Response.toString());
      var valid = aRes.valid;
      if (valid) {
        var status = true;
               
        if (optIn) {
        var newSubscriber = {
          EmailAddress: email,
          SubscriberKey: subKey,
          EmailTypePreference: "HTML",
          Status: "Active",
          Attributes:{ "First Name": firstName, "Last Name": lastName },
          Lists: [{"Status": "Active", "ID": 394, "Action": "Upsert"},{"Status": "Active", "ID": 391, "Action": "Upsert"},{"Status": "Active", "ID": 390, "Action": "Upsert"},
                 {"Status": "Active", "ID": 389, "Action": "Upsert"},{"Status": "Active", "ID": 392, "Action": "Upsert"},{"Status": "Active", "ID": 393, "Action": "Upsert"}]
        };
        var subObj = Subscriber.Init(email);
        var status = subObj.Upsert(newSubscriber);
        };
     
        // if log submission fire to transactional email to log notifications
              
        if (productGroup === "Log" || productGroup === "Sashco") {
           
            var message = "log";
            var headerNames = ["Authorization"];
            var headerValues = ["Bearer " + mcAccessToken];
            var jsonBody = {
                "definitionKey": "contact_us_notifications",  //Email definition Key
                "recipient": 
                 {
                    "contactKey": "orders@sashco.com",
                    "to": "orders@sashco.com",
                    "attributes": {
                        "SubscriberKey": "orders@sashco.com",
                        "EmailAddress": "orders@sashco.com",
                        "FirstName": firstName, 
                        "LastName": lastName, 
                        "Email": email, 
                        "Phone": phone, 
                        "City": city, 
                        "State": state, 
                        "Region": region, 
                        "ProductGroup": productGroup, 
                        "TypeOfProject": typeOfProject, 
                        "Homeowner_Contractor": hoCont, 
                        "Help": help, 
                        "BestFit": bestFit,
                        "Company": company, 
                        "weekly_cartridge_volume": wklyCartVol, 
                        "monthly_case_volume": mthlyCaseVol, 
                        "BrandType": brandType, 
                        "ProjectType": projectType, 
                        "AnnualHomeCount": annualHomeCount, 
                        "Comments": comments,
                        "SalesforceId": salesforceId,
                        "Intro": "LOG Contact Us Notification",
                        "Subject": "New submission on Form Log - Contact Us"
                                }
                }
            };
    
            var requestUrl = rest_instance_url + "/messaging/v1/email/messages/"+Count;  //URL for Transactional API with unique Id 
    
            var fireEmail = HTTP.Post(requestUrl, contentType, Stringify(jsonBody), headerNames, headerValues);
        
        } else if (region != "US") {
      
          var message = "hi";
         
          // if hi && (region = Other or Canada) then fire to transactional email to Hi notifications for outside the country
   
            var headerNames = ["Authorization"];
            var headerValues = ["Bearer " + mcAccessToken];
            var jsonBody = {
                "definitionKey": "contact_us_notifications",  //Email definition Key
                "recipient": 
                {
                    "contactKey": "orders@sashco.com",
                    "to": "orders@sashco.com",
                    "attributes": {
                        "SubscriberKey": "orders@sashco.com",
                        "EmailAddress": "orders@sashco.com",
                        "FirstName": firstName, 
                        "LastName": lastName, 
                        "Email": email, 
                        "Phone": phone, 
                        "City": city, 
                        "State": state, 
                        "Region": region, 
                        "ProductGroup": productGroup, 
                        "TypeOfProject": typeOfProject, 
                        "Homeowner_Contractor": hoCont, 
                        "Help": help, 
                        "BestFit": bestFit,
                        "Company": company, 
                        "weekly_cartridge_volume": wklyCartVol, 
                        "monthly_case_volume": mthlyCaseVol, 
                        "BrandType": brandType, 
                        "ProjectType": projectType, 
                        "AnnualHomeCount": annualHomeCount, 
                        "Comments": comments,
                        "SalesforceId": salesforceId,
                        "Intro": "HI Contact Us was submitted from outside the US.",
                        "Subject": "New submission from outside U.S. - HI Contact Us"
                                }
                }
            };

            var requestUrl = rest_instance_url + "/messaging/v1/email/messages/"+Count;  //URL for Transactional API with unique Id 

            var fireEmail = HTTP.Post(requestUrl, contentType, Stringify(jsonBody), headerNames, headerValues);


        } else if (hoCont != "DIY_Home") {
      
          var message = "hi";
         
          // if hi && Pro or Dealer && selected salesperson or training selected fire to hi contact us journey - APIEvent-2d65595d-ca92-d185-834d-8277bf7171f8
          
           var headerNames = ["Authorization"];
            var headerValues = ["Bearer " + mcAccessToken];

            var jsonBody = {
              "ContactKey": subKey,
              "EventDefinitionKey": "APIEvent-2d65595d-ca92-d185-834d-8277bf7171f8",    //provide journey EVENT DEFINITION KEY
              "Data": {
                  "FirstName": firstName, 
                  "LastName": lastName, 
                  "Email": email, 
                  "Phone": phone, 
                  "City": city, 
                  "State": state, 
                  "Region": region, 
                  "ProductGroup": productGroup, 
                  "TypeOfProject": typeOfProject, 
                  "Homeowner_Contractor": hoCont, 
                  "Help": help, 
                  "BestFit": bestFit,
                  "Company": company, 
                  "weekly_cartridge_volume": wklyCartVol, 
                  "monthly_case_volume": mthlyCaseVol, 
                  "BrandType": brandType, 
                  "ProjectType": projectType, 
                  "AnnualHomeCount": annualHomeCount, 
                  "Comments": comments,
                  "SubKey": subKey
              }
            };

          var requestUrl = rest_instance_url + "/interaction/v1/events";

          var fireEntryEvent = HTTP.Post(requestUrl, contentType, Stringify(jsonBody), headerNames, headerValues);
 
        
      } else {
      
        var message = "hi";
          
        // if hi && DIYer then fire to transactional email to Hi notifications && remainder all to customer service notification

           var headerNames = ["Authorization"];
            var headerValues = ["Bearer " + mcAccessToken];
            var jsonBody = {
                "definitionKey": "contact_us_notifications",  //Email definition Key
                "recipient": 
                {
                    "contactKey": "orders@sashco.com",
                    "to": "orders@sashco.com",
                    "attributes": {
                        "SubscriberKey": "orders@sashco.com",
                        "EmailAddress": "orders@sashco.com",
                        "FirstName": firstName, 
                        "LastName": lastName, 
                        "Email": email, 
                        "Phone": phone, 
                        "City": city, 
                        "State": state, 
                        "Region": region, 
                        "ProductGroup": productGroup, 
                        "TypeOfProject": typeOfProject, 
                        "Homeowner_Contractor": hoCont, 
                        "Help": help, 
                        "BestFit": bestFit,
                        "Company": company, 
                        "weekly_cartridge_volume": wklyCartVol, 
                        "monthly_case_volume": mthlyCaseVol, 
                        "BrandType": brandType, 
                        "ProjectType": projectType, 
                        "AnnualHomeCount": annualHomeCount, 
                        "Comments": comments,
                        "SalesforceId": salesforceId,
                        "Intro": "HI Contact Us Notification",
                        "Subject": "New submission on Form HI - Contact Us"
                                }
                }
            };

            var requestUrl = rest_instance_url + "/messaging/v1/email/messages/"+Count;  //URL for Transactional API with unique Id 

            var fireEmail = HTTP.Post(requestUrl, contentType, Stringify(jsonBody), headerNames, headerValues);

        };
        
    
        var deName = 'Contact Us Submissions';
        var insertColumnArr = ['FirstName', 'LastName', 'Email', 'Phone', 'City', 'State', 'Region', 'ProductGroup', 'TypeOfProject', 'Homeowner_Contractor', 'Help', 'BestFit',
                               'Company', 'weekly_cartridge_volume', 'monthly_case_volume', 'BrandType', 'ProjectType', 'AnnualHomeCount', 'Comments', 'optIn',
                               'Host', 'Referer', 'UserAgent', 'SubKey'];
        var insertColumnValueArr = [firstName, lastName, email, phone, city, state, region, productGroup, typeOfProject, hoCont, help, bestFit, company, wklyCartVol, mthlyCaseVol,
                                    brandType, projectType, annualHomeCount, comments, optIn, requestHost, referer, userAgent, subKey];
        Platform.Function.InsertDE(deName, insertColumnArr, insertColumnValueArr);
        } else {
        var failedValidation = aRes.failedValidation;
        var status = false;
        var message = "Please enter a valid email address";
      };
    };
    var response = {
      "ok": status,
      "message": message
    }
    Write(Stringify(response));
  }
  catch (e) {
    Write("<br>" + Stringify(e))
  }
</script>